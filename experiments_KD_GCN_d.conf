# Word embeddings.
glove_300d {
  path = PubMed-shuffle-win-2.txt
  size = 200
}
glove_300d_filtered {
  path = PubMed-shuffle-win-2.txt.filtered
  #path=PubMed-shuffle-win-2.txt_CRAFT.filtered
  size = 200
}

glove_300d_filtered_KB {
  path = PubMed-shuffle-win-2.txt.filtered_KB
  size = 200
}

glove_300d_2w {
  path = PubMed-shuffle-win-2.txt
  size = 200
}

# Distributed training configurations.
two_local_gpus {
  addresses {
    ps = [localhost:2222]
    worker = [localhost:2223, localhost:2224]
  }
  gpus = [0, 1]
}

# Main configuration.
best {
  # Computation limits.
  max_top_antecedents = 50   #******************
  max_training_sentences = 50
  top_span_ratio = 0.7   #******************
  

  # Model hyperparameters.
  filter_widths = [3, 4, 5]
  filter_size = 50
  char_embedding_size = 8
  char_vocab_path = "char_vocab.txt"
  context_embeddings = ${glove_300d_filtered}
  KB_embeddings = ${glove_300d_filtered_KB}  
  head_embeddings = ${glove_300d_2w}
  contextualization_size = 200
  contextualization_layers = 3
  ffnn_size = 150
  ffnn_depth = 2
  feature_size = 20
  max_span_width = 15 
  bert_size=768
  
  #pairwise
  use_metadata = true
  use_features_pair = true
  #pair_feature_attention=true


  #span
  model_heads = true
  use_features_span = false
  addspan_features=true
  
  coref_depth = 2
  lm_layers = 3
  lm_size = 1024
  coarse_to_fine = true
  
  
  #KB
  kbmaxnum=5
  omcs_k = 50
  organisms_k = 10
  proteins_k = 10
  mygenes_k =10
  genes_k = 10
  interaction_types_k =10
  coarsekomcs=30
  top_kb_ratio = 0.5
  
  #DEP
  dep_embeddings_size=10
  
  #GCN
  GAToutsize=8
  n_attn_heads =8
  GAT_dropout_rate = 0.4
  
  # Learning hyperparameters.
  max_gradient_norm = 5.0
  lstm_dropout_rate = 0.4
  lexical_dropout_rate = 0.5
  dropout_rate = 0.3
  
  optimizer = adam
  learning_rate = 0.0001
  decay_rate = 0.999
  decay_frequency = 100

  
  #KB
  noKB=true
  average_KB=false
  attention_KB=false
  
  
  #ablation-type
  OMCS=false
  PROTEIN=false
  ORGANISM=false
  GENE=false
  INTERACTION=false

  # Other.
  train_path = trainnewadd200.depkb.jsonlines
  eval_path = dev.depkb.jsonlines 
  #eval_path = caseGAT.depkb.jsonlines
  conll_eval_path = dev4.conll

  
  #lm_path = elmo_pmid.hdf5
  #bert_path=bert_pmid.hdf5
  
  lm_path = elmo_pmid_all.hdf5
  bert_path=bert_pmid_all.hdf5
  
  deps=["amod", "ccomp", "conj", "#cc", "#dep", "#mark", "nmod:npmod", "#compound:prt", "advmod", "csubj", "#nmod:tmod", "#nsubj", "#case", "#cc:preconj", "#neg", "#amod", "advcl", "#appos", "expl", "acl:relcl", "csubjpass", "aux", "#nmod:poss", "det", "#aux", "#advmod", "#csubj", "nsubjpass", "appos", "cop", "neg", "case", "#ccomp", "nsubj", "auxpass", "mark", "cc", "nmod", "#cop", "#nsubjpass", "nummod", "dobj", "#acl:relcl", "#dobj", "compound", "#auxpass", "#det", "#xcomp", "#advcl", "parataxis", "#csubjpass", "acl", "#parataxis", "#compound", "xcomp", "#conj", "#expl", "compound:prt", "#nmod", "#nummod", "nmod:tmod", "nmod:poss", "cc:preconj", "dep", "#nmod:npmod", "#acl","punct","#punct"]
  
  
  genres = ["bc", "bn", "mz", "nw", "pt", "tc", "wb"]
  numbers= ["SINGULAR","PLURAL","UNKNOWN"]
  MMS=["aapp","acab","acty","aggp","amas","amph","anab","anim","anst","antb","arch","bacs","bact","bdsu","bdsy","bhvr","biof","bird","blor","bmod","bodm","bpoc","bsoj","celc","celf","cell","cgab","chem","chvf","chvs","clas","clna","clnd","cnce","comd","crbs","diap","dora","drdd","dsyn","edac","eehu","elii","emod","emst","enty","enzy","euka","evnt","famg","ffas","fish","fndg","fngs","food","ftcn","genf","geoa","gngm","gora","grpa","grup","hcpp","hcro","hlca","hops","horm","humn","idcn","imft","inbe","inch","inpo","inpr","irda","lang","lbpr","lbtr","mamm","mbrt","mcha","medd","menp","mnob","mobd","moft","mosq","neop","nnon","npop","nusq","ocac","ocdi","orch","orga","orgf","orgm","orgt","ortf","patf","phob","phpr","phsf","phsu","plnt","podg","popg","prog","pros","qlco","qnco","rcpt","rept","resa","resd","rnlw","sbst","shro","socb","sosy","spco","tisu","tmco","topp","virs","vita","vtbt","unknown"]
  eval_frequency = 1000
  report_frequency = 100
  log_root = logs_KL
  cluster = ${two_local_gpus}
}


AVEKB = ${best} {
  average_KB=true  
  noKB=false
  attention_KB=false
}
ATTKB= ${best} {
  average_KB=false
  noKB=false
  attention_KB=true  
}




# For evaluation. Do not use for training (i.e. only for predict.py, evaluate.py, and demo.py). Rename `best` directory to `final`.

final = ${best} {
  context_embeddings = ${glove_300d}
  head_embeddings = ${glove_300d_2w}
  lm_path = test_elmo_pmid.hdf5
  eval_path = testnew.depkb.jsonlines
  conll_eval_path = test4.conll
  bert_path= bert_test.hdf5
}
finalave=${AVEKB} {
  context_embeddings = ${glove_300d}
  head_embeddings = ${glove_300d_2w}
  lm_path = test_elmo_pmid.hdf5
  eval_path = testnew.depkb.jsonlines
  conll_eval_path = test4.conll
  bert_path= bert_test.hdf5
}
finalatt=${ATTKB} {
  context_embeddings = ${glove_300d}
  head_embeddings = ${glove_300d_2w}
  lm_path = test_elmo_pmid.hdf5
  eval_path = testnew.depkb.jsonlines
  conll_eval_path = test4.conll
  bert_path= bert_test.hdf5
}
predict= ${best} {
  eval_path = caseGAT.depkb.jsonlines
  lm_path = elmo_pmid_all.hdf5
  bert_path=bert_pmid_all.hdf5
}
# Baselines.
c2f_100_ant = ${best} {
  max_top_antecedents = 100
}
c2f_250_ant = ${best} {
  max_top_antecedents = 250
}
c2f_1_layer = ${best} {
  coref_depth = 1
}
c2f_3_layer = ${best} {
  coref_depth = 3
}
distance_50_ant = ${best} {
  max_top_antecedents = 50
  coarse_to_fine = false
  coref_depth = 1
}
distance_100_ant = ${distance_50_ant} {
  max_top_antecedents = 100
}
distance_250_ant = ${distance_50_ant} {
  max_top_antecedents = 250
}
